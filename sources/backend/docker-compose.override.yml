version: '3.4'

services:
  library_gateway:
    restart: on-failure
    container_name: "library_gateway"
    networks:
      - "library_services"
    image: envoyproxy/envoy:v1.11.1
    ports:
      - "6000:80"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
 
  library_family:
    image: ${DOCKER_REGISTRY-}library_family
    container_name: "library_family"
    restart: on-failure
    networks:
      - "library_services"
    environment:
      - POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD
      - POSTGRESQL_HOST=$POSTGRESQL_HOST
      - POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE
      - POSTGRESQL_USER=$POSTGRESQL_USER
      - POSTGRESQL_PORT=$POSTGRESQL_PORT
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - AUDIENCE_KEY=$AUDIENCE_KEY
      - AES_KEY=$AES_KEY
      - TZ=$TIME_ZONE  
    depends_on:
      - postgresql
      - redis
    ports:
      - "7000:80"
    build:
      context: .
      dockerfile: LibraryServices.FamilyService/Dockerfile

  library_identity:
    image: ${DOCKER_REGISTRY-}library_identity
    container_name: "library_identity"
    restart: on-failure
    networks:
      - "library_services"
    environment:
      - POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD
      - POSTGRESQL_HOST=$POSTGRESQL_HOST
      - POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE
      - POSTGRESQL_USER=$POSTGRESQL_USER
      - POSTGRESQL_PORT=$POSTGRESQL_PORT
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - AUDIENCE_KEY=$AUDIENCE_KEY
      - AES_KEY=$AES_KEY
      - TZ=$TIME_ZONE  
    depends_on:
      - postgresql
      - redis
    ports:
      - "8000:80"
    build:
      context: .
      dockerfile: LibraryServices.IdentityService/Dockerfile

  library_package:
    image: ${DOCKER_REGISTRY-}library_package
    container_name: "library_package"
    restart: on-failure   
    networks:
      - "library_services"
    environment:
      - POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD
      - POSTGRESQL_HOST=$POSTGRESQL_HOST
      - POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE
      - POSTGRESQL_USER=$POSTGRESQL_USER
      - POSTGRESQL_PORT=$POSTGRESQL_PORT
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - AUDIENCE_KEY=$AUDIENCE_KEY
      - AES_KEY=$AES_KEY
      - TZ=$TIME_ZONE  
    depends_on:
      - postgresql
      - redis
    ports:
      - "9000:80"
    build:
      context: .
      dockerfile: LibraryServices.PackageService/Dockerfile

  library_parameter:
    image: ${DOCKER_REGISTRY-}library_parameter
    container_name: "library_parameter"
    restart: on-failure
    networks:
      - "library_services"
    environment:
      - POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD
      - POSTGRESQL_HOST=$POSTGRESQL_HOST
      - POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE
      - POSTGRESQL_USER=$POSTGRESQL_USER
      - POSTGRESQL_PORT=$POSTGRESQL_PORT
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - AUDIENCE_KEY=$AUDIENCE_KEY
      - AES_KEY=$AES_KEY
      - TZ=$TIME_ZONE  
    depends_on:
      - postgresql
      - redis
    ports:
      - "10000:80"
    build:
      context: .
      dockerfile: LibraryServices.ParameterService/Dockerfile

  postgresql:
    container_name: "postgresql"
    image: "postgres"
    restart: always
    ports:
      - "$POSTGRESQL_PORT:5432"
    networks:
      - "library_services"
    environment:
      TZ: 'GMT+8'
      PGTZ: 'GMT+8'

  redis:
    networks:
      - "library_services"
    restart: always
    container_name: "redis"
    image: "redis"
    ports:
      - "$REDIS_PORT:6379"
    command: redis-server --requirepass $REDIS_PASSWORD


networks:
    library_services:
        driver: bridge
       
